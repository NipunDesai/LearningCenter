@model LearningCenter.DomainModel.Models.Account.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @*<h4 class="m-l45">Reset your password</h4>*@
    <hr />
    @*@Html.ValidationSummary("", new { @class = "error" })*@
    @Html.HiddenFor(model => model.Code)
        var result = ViewBag.Message as string;
        if (!String.IsNullOrEmpty(result))
        {
            <p class="error m-l45">@result</p>
        }
    @*<div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>*@
    <div class="form-group">
        <label class="col-md-4 control-label"><label class="error">*</label>Password:</label>
        <div class="col-md-8">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            <p class="error">
                @Html.ValidationMessageFor(m => m.Password)
            </p>
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-4 control-label"><label class="error">*</label>Confirm Password:</label>
        <div class="col-md-8">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            <p class="error">
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </p>
        </div>
        </div>
    <div class="form-group">
        <div class="col-md-offset-4 col-md-8">
            <input type="submit" class="btn btn-primary btn-sm btn-block" value="Reset" />
        </div>
    </div>
}

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
